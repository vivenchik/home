image: docker:latest

services:
  - docker:dind

stages:
  - test
  - deploy

tests:
  image: python:3.11.2
  stage: test
  timeout: 3m
  script:
    - pip install --upgrade pip
    - cp "$CI_PROJECT_DIR/tests/.env" "$CI_PROJECT_DIR/.env"
    - pip install -r requirements/requirements-dev.txt
    - pytest -n 4 --cov src tests
    - coverage report --include "src/lib/*" --skip-empty --fail-under=50
    - coverage xml
  coverage: /(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/
  artifacts:
    paths:
      - coverage.xml
    expire_in: 1 week
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

linters:
  image: python:3.11.2
  stage: test
  timeout: 3m
  allow_failure: true
  script:
    - pip install --upgrade pip
    - pip install -r requirements/requirements-dev.txt
    - black --check .
    - isort --check .
    - mypy src tests server.py lambda/lambda.py
    - flake8 src tests server.py lambda/lambda.py

deploy_ya:
  stage: deploy
  timeout: 5m
  only:
    refs:
      - master
  script:
    - apk update -qq
    - apk add -qq git
    - 'which ssh-agent || ( apk add -qq openssh-client )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | ssh-add -
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - ssh ivan@51.250.77.64 "cd /home/ivan/home && git fetch --all && git checkout $CI_COMMIT_REF_NAME && git pull --force && sudo docker compose -f docker-compose.yml up --build -d  && exit"
