name: Test and Deploy
run-name: ${{ github.actor }} Test and Deploy

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

permissions:
  pull-requests: write

jobs:
  linters:
    concurrency: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/requirements-dev.txt
      - name: Lint with black
        run: |
          black --check .
      - name: Lint with isort
        run: |
          isort --check .
      - name: Lint with mypy
        run: |
          mypy src tests server.py lambda/lambda.py
      - name: Lint with flake8
        run: |
          flake8 src tests server.py lambda/lambda.py

  unit-tests:
    concurrency: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
      - name: Install dependencies and env
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/requirements-dev.txt
          cp "./tests/.env" "./.env"
      - name: Test with pytest
        run: |
          pytest -n 4 --cov src tests
          coverage report --include "src/lib/*" --skip-empty --fail-under=50
          coverage xml --include "src/lib/*" --skip-empty

      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage.xml
          badge: true
          fail_below_min: false
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '40 80'
      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          recreate: true
          path: code-coverage-results.md

  deploy:
    concurrency: deploy
    needs: [unit-tests]
    runs-on: ubuntu-latest
    steps:
    - name: Create SSH key
      run: |
        install -m 600 -D /dev/null ~/.ssh/id_rsa
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        host='51.250.77.64'
        hosts="$(dig +short "$host" | grep -v '\.$' | sed -z 's|\n|,|g')$host"
        ssh-keyscan -H "$hosts" > ~/.ssh/known_hosts

    - name: Deploy
      run: |
        ssh ivan@51.250.77.64 "cd /home/ivan/home && git fetch --all && git checkout $GITHUB_SHA && git pull --force && sudo docker compose -f docker-compose.yml up --build -d  && exit"
